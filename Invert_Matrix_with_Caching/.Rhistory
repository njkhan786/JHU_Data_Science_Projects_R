install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt = sqrt(z - 1)
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
q()
a <- avaliable.packages()
a <- available.packages()
head(rownames(a), 3)
add2 <- function(x, y) {
x + y
}
add2(3,5)
above <- function(x, n){
use <- x >n
x[use]
}
x <- 2:30
above(x, 5)
# find the mean of each column
columnmean <- function(a){
nc <- ncol(a)  # find out number of column
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
cube <- function(x, n){
x^3
}
cube(3)
x <- 1:10
if(x>5){
x <- 0
}
f <- function(x){
g <- function(y){
y +z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(datasets)
data(iris)
?iris
summary(iris)
View(iris)
View(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
summary(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
aa <- with(mtcars, tapply(hp, cyl, mean))
aa[1]-aa[3]
debug(ls)
ls
?ls
debug(ls)
ls(iris)
exit
:q
system.time(readLines(â€œhttp://www.emmayu.com"))
system.time(readLines("http://www.emmayu.com"))
setwd("~/Data_Science_JHU/R_Programing_2ndTime/Program_2_inverse_matrix/ProgrammingAssignment2")
source("cachematrix.R")
m<-makeCacheMatrix(matrix(1:4,2,2))
system.time(cacheSolve(m))
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(10)
x <- rbinom(10,10,0.5)
x
hist(x)
e <- rnorm(10,0,20)
y <- 0.5 +2*x +e
hist(y)
